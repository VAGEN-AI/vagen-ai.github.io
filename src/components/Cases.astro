---
// Cases.astro: VAGEN主页案例展示区块
---
<section id="cases" class="content-section alt-background">
  <div class="section-container">
    <h2 class="section-title">Cases</h2>
    <div class="case-cards" style="display:flex;flex-direction:column;align-items:center;gap:2.2rem;">
      <div class="component-card" id="case-appendix">
        <div class="component-header" style="background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%); color: white; padding: 1.5rem; display: flex; justify-content: space-between; align-items: center; gap: 1rem; cursor: pointer; width: 100%; box-sizing: border-box;">
          <h3 class="component-title" style="margin: 0; font-size: 1.3rem; font-weight: 600;">Case : Enhanced Visual State Reasoning with VAGEN-Full</h3>
          <div class="expand-icon">-</div>
        </div>
        <div class="component-content active" id="case-appendix-content">
          <img src="figures/case_study_appendix_1.png" alt="Case Study Appendix" style="width:100%;max-width:950px;border-radius:10px;box-shadow:0 2px 8px rgba(34,197,94,0.10);margin:1.5rem auto;display:block;" />
          <div style="max-width:950px;margin:1rem auto 0 auto;font-size:0.98rem;color:#666;text-align:center;line-height:1.5;">
            VAGEN-Full vs. VAGEN-Base in Navigation, Sokoban and Frozenlake (left to right). For the same environment, VAGEN-Full is the left column, VAGEN-Base is the right column.
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<style>
  .component-card {
    background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 50%, #bbf7d0 100%);
    border: 1px solid rgba(34, 197, 94, 0.2);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(34, 197, 94, 0.1);
    margin-bottom: 2rem;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    width: 100%;
    min-width: 0;
  }
  .component-card:hover {
    box-shadow: 0 8px 30px rgba(34, 197, 94, 0.15);
    transform: translateY(-2px);
  }
  .component-header {
    /* 背景色由内联style控制 */
    color: white;
    padding: 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    cursor: pointer;
    width: 100%;
    box-sizing: border-box;
  }
  .component-title {
    margin: 0;
    font-size: 1.3rem;
    font-weight: 600;
  }
  .component-content {
    padding: 2rem;
    display: none;
    color: var(--text-secondary);
    background-color: rgba(255, 255, 255, 0.8);
    width: 100%;
    box-sizing: border-box;
  }
  .component-content.active {
    display: block;
    animation: fadeIn 0.4s ease;
  }
  .expand-icon {
    font-size: 1.5rem;
    font-weight: bold;
    transition: transform 0.3s ease;
  }
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-4px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style> 

<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('#cases .component-card').forEach((card) => {
      const header = card.querySelector('.component-header');
      const content = card.querySelector('.component-content');
      const icon = card.querySelector('.expand-icon');

      if (header && content && icon) {
        const updateState = () => {
          const isOpen = content.classList.contains('active');
          content.style.display = isOpen ? 'block' : 'none';
          icon.textContent = content.classList.contains('active') ? '-' : '+';
        };

        updateState();

        header.addEventListener('click', () => {
          content.classList.toggle('active');
          updateState();
        });
      }
    });
  });
</script>
